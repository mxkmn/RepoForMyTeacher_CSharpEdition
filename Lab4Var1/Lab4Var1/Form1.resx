<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox0.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAIACAYAAAA4+1GlAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAU
        FgAAFBYBq8zxhAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAB3FSURBVHhe7d0L
        uO3lnMDxblI6pZJSChVNNxVqhFDETHKPkQglqYaUjFBDZNxJY0SZJhrUJDWKEsqtUHQhuXSbku73kq6a
        +f6O5zTV+e2937XPXu96136/n+f5Pg+eh461//t31vqv9/++C0lSZUvQGrQZvZL2pgPpKDqVLqIXkyQN
        1ZIUw2hLeh3FMDqYjqdf0BX0vwXtSpI0bcvRehTDaGfaj2IYfZfOo1soGz7T6QMkScWeS6fRZXQ3ZYNl
        WB1CklTsBZQNkxrFR0hJKvZkyoZJjeJ+lyQVW5myYVKjy0mSii1K91A2UIZd3DOLf74kFbuSsoFSo5VI
        koqdRdkwqdFGJEnFvkXZMKnRViRJxf6dsmFSox1Ikop9kLJhUqP3kCQV+0fKhkmNPkOSVOzllA2TGh1N
        klTsaZQNkxrFc4ySVGx1yoZJjS4mSSoWm+1lw6RGt5MkDeRGygZKjR5OklTsN5QNkxqtTZJU7GTKhkmN
        tiBJKvZlyoZJjbYjSSr2CcqGSY32IkkqFkMjGyY1imEpScXiY1k2TGr0RZKkYnHjOxsmNfIwCkkDWZey
        YVKjn5AkFVuRsmFSo9+TJBVbjO6lbKAMu+tIkgZyE2UDZdj9hRYhSSp2EWUDpUbLkyQVO4OyYVKjJ5Ak
        FTuRsmFSo01JkoqN8nnCrUmSih1I2TCp0etIkoq9l7JhUqM9SZKKjfK4rzgbUZKKbUvZMKnR50iSij2P
        smFSo6NIkoo9mbJhUqPYolmSij2WsmFSo3NIkorNoWyY1OgykqSB3EHZQBl2fyZJGsgVlA2UGi1JklTs
        XMqGSY1WJUkq9gPKhkmNNiRJKvZ1yoZJjZ5DklTsEMqGSY1eTpJU7MOUDZMavZ4kqdi7KRsmNYqHryWp
        2FsoGyY12pskqVh8LMuGSY3cYkbSQLahbJjU6NMkScWeT9kwqdGhJEnFnk7ZMKnRf5EkFXsiZcOkRieQ
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>